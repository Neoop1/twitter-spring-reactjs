server:
    port: 8004
spring:
    application:
        name: tag-service
    datasource:
        url: jdbc:postgresql://localhost:5432/tag-test
        username: postgres
        password: root
        driverClassName: org.postgresql.Driver
    jpa:
        hibernate:
            ddl-auto: none
        properties:
            hibernate:
                dialect: org.hibernate.dialect.PostgreSQLDialect
    sql:
        init:
            mode: always
            data-locations: classpath:sql-test/clear-tag-db.sql, classpath:sql-test/populate-tag-db.sql
    kafka:
        bootstrap-servers: localhost:9092
        consumer:
            group-id: tag-test
eureka:
    client:
        service-url:
            defaultZone: ${EUREKA_DEFAULT_ZONE:http://localhost:8761/eureka/}
        fetchRegistry: ${FETCH_REGISTRY:true}
        registerWithEureka: ${REGISTER_WITH_EUREKA:true}
    instance:
        hostname: ${HOST_NAME:${spring.application.name}}  # work on swarm
        instance-id: ${spring.application.name}:${random.uuid}
        leaseRenewalIntervalInSeconds: ${LEASE_RENEWAL_INTERVAl_IN_SECONDS:10}
        leaseExpirationDurationInSeconds: ${LEASE_EXPIRATION_DURATIONIN_SECONDS:20}
        preferIpAddress: ${PREFER_IP_ADDRESS:true}

management:
    endpoints:
        health:
         show-details: always
        web:
          base-path: /actuator
          exposure:
            include: health