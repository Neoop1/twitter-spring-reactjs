server:
    port: 8021

spring:
    application:
        name: image-service
    zipkin:
        base-url: http://${ZIPKIN_HOST:localhost}:9411


amazon:
    s3:
        bucket:
            name: twitterclonestorage
    #aws:
    #    access-key: AKIATP4TDBGPAJUNI5EY
    #    secret-key: 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
    aws:
        accessKey: "minio-user"
        secretKey: "minio-password"
        region.static: us-east-1
        service-endpoint: http://minio:9000 ##minio server docker
        ##service-endpoint: http://minio.twitter-website.svc.cluster.local:9000 ##minio server kube 

    



eureka:
    client:
        service-url:
            defaultZone: ${EUREKA_DEFAULT_ZONE:http://localhost:8761/eureka/}
        fetchRegistry: ${FETCH_REGISTRY:true}
        registerWithEureka: ${REGISTER_WITH_EUREKA:true}
    instance:
        hostname: ${HOST_NAME:${spring.application.name}}  # work on swarm
        instance-id: ${spring.application.name}:${random.uuid}
        leaseRenewalIntervalInSeconds: ${LEASE_RENEWAL_INTERVAl_IN_SECONDS:10}
        leaseExpirationDurationInSeconds: ${LEASE_EXPIRATION_DURATIONIN_SECONDS:20}
        preferIpAddress: ${PREFER_IP_ADDRESS:false}

management:
    endpoints:
        web:
            exposure:
                include: 'prometheus, health'
    metrics:
        export:
            prometheus:
                enabled: true
        distribution:
            percentiles-histogram:
                "[http.server.requests]": true
