server:
    port: 8006
spring:
    application:
        name: chat-service
    datasource: 
        url: jdbc:postgresql://${DATASOURCE_HOST:localhost}:5432/chat
        username: postgres
        password: root
        driverClassName: org.postgresql.Driver
    jpa:
        hibernate:
            ddl-auto: update
            generate-ddl: true  
        properties:
            hibernate:
                dialect: org.hibernate.dialect.PostgreSQLDialect
    flyway:
        locations: classpath:db/migration
    zipkin:
        base-url: http://${ZIPKIN_HOST:localhost}:9411
    kafka:
        bootstrap-servers: ${BROKER_HOST:localhost}:9092
        consumer:
            group-id: chat
resilience4j:
    circuitbreaker:
        instances:
            tweet-service:
                minimum-number-of-calls: 5
            websocket-service:
                minimum-number-of-calls: 5
feign:
    circuitbreaker:
        enabled: true

eureka:
    client:
        service-url:
            defaultZone: ${EUREKA_DEFAULT_ZONE:http://localhost:8761/eureka/}
        fetchRegistry: ${FETCH_REGISTRY:true}
        registerWithEureka: ${REGISTER_WITH_EUREKA:true}
    instance:
        hostname: ${HOST_NAME:${spring.application.name}}  # work on swarm
        instance-id: ${spring.application.name}:${random.uuid}
        leaseRenewalIntervalInSeconds: ${LEASE_RENEWAL_INTERVAl_IN_SECONDS:10}
        leaseExpirationDurationInSeconds: ${LEASE_EXPIRATION_DURATIONIN_SECONDS:20}
        preferIpAddress: ${PREFER_IP_ADDRESS:false}

management:
    endpoints:
        web:
            exposure:
                include: 'prometheus, health'
    metrics:
        export:
            prometheus:
                enabled: true
        distribution:
            percentiles-histogram:
                "[http.server.requests]": true
