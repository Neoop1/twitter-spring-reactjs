# proxying the
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}


server {

  listen 80;
  server_name twitter.local;
  add_header Access-Control-Allow-Origin http://twitter.local;

location / {
# Fronrnd

    
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    # do not pass the CORS header from the response of the proxied server to the
    # client
    proxy_hide_header 'Access-Control-Allow-Origin';
    add_header Access-Control-Allow-Origin "$http_origin" always;

    proxy_pass http://frontend;
    proxy_http_version 1.1;
}

#location /ws {
#
#   proxy_pass http://frontend;
#   proxy_http_version 1.1;
#   proxy_set_header Upgrade $http_upgrade;
#   proxy_set_header Connection "Upgrade";
#
#}
location  /ui/v1 {

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    # do not pass the CORS header from the response of the proxied server to the
    # client
    proxy_hide_header 'Access-Control-Allow-Origin';
    add_header Access-Control-Allow-Methods 'GET, POST, PUT, OPTIONS, PATCH, DELETE, HEAD';
    add_header Access-Control-Allow-Origin http://twitter.local;
    add_header Access-Control-Allow-Origin "$http_origin" always;

    proxy_pass http://api-gateway:8000;
    proxy_http_version 1.1;
  }


location /websocket {

    
                
  
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    # do not pass the CORS header from the response of the proxied server to the
    # client
    proxy_hide_header 'Access-Control-Allow-Origin';
    add_header Access-Control-Allow-Methods 'GET, POST, PUT, OPTIONS, PATCH, DELETE, HEAD';
    add_header Access-Control-Allow-Origin http://twitter.local;
    add_header Access-Control-Allow-Origin "$http_origin" always;

    proxy_pass http://api-gateway:8000;
    proxy_http_version 1.1;

    }

    
}



